import{aw as l,y as t,z as r,b0 as o}from"./chunks/framework.Ce07U7Gp.js";const u=JSON.parse('{"title":"Table组件 props","description":"","frontmatter":{},"headers":[],"relativePath":"api/table/props.md","filePath":"api/table/props.md"}'),e={name:"api/table/props.md"};function n(i,a,s,p,d,h){return r(),t("div",null,[...a[0]||(a[0]=[o('<h1 id="table组件-props" tabindex="-1">Table组件 props <a class="header-anchor" href="#table组件-props" aria-label="Permalink to &quot;Table组件 props&quot;">​</a></h1><h2 id="data" tabindex="-1">data <a class="header-anchor" href="#data" aria-label="Permalink to &quot;data&quot;">​</a></h2><ul><li><p><strong>详情：</strong></p></li><li><p><strong>默认值：</strong></p></li><li><p><strong>类型：</strong></p></li></ul><h2 id="columns" tabindex="-1">columns <a class="header-anchor" href="#columns" aria-label="Permalink to &quot;columns&quot;">​</a></h2><ul><li><p><strong>详情：</strong></p></li><li><p><strong>默认值：</strong></p></li><li><p><strong>类型：</strong></p></li></ul><h2 id="spanmethod" tabindex="-1">spanMethod <a class="header-anchor" href="#spanmethod" aria-label="Permalink to &quot;spanMethod&quot;">​</a></h2><ul><li><p><strong>详情：</strong> 合并行或列的计算方法</p></li><li><p><strong>默认值：</strong></p></li><li><p><strong>类型：</strong></p></li></ul><h2 id="loading" tabindex="-1">loading <a class="header-anchor" href="#loading" aria-label="Permalink to &quot;loading&quot;">​</a></h2><ul><li><p><strong>详情：</strong></p></li><li><p><strong>默认值：</strong></p></li><li><p><strong>类型：</strong></p></li></ul><h2 id="showheader" tabindex="-1">showHeader <a class="header-anchor" href="#showheader" aria-label="Permalink to &quot;showHeader&quot;">​</a></h2><ul><li><p><strong>详情：</strong> 是否显示表头</p></li><li><p><strong>默认值：</strong></p></li><li><p><strong>类型：</strong></p></li></ul><h2 id="bodyheight" tabindex="-1">bodyHeight <a class="header-anchor" href="#bodyheight" aria-label="Permalink to &quot;bodyHeight&quot;">​</a></h2><ul><li><p><strong>详情：</strong> Table的最大高度。合法的值为数字或者单位为 px 的高度</p></li><li><p><strong>默认值：</strong></p></li><li><p><strong>类型：</strong></p></li></ul><h2 id="emptytext" tabindex="-1">emptyText <a class="header-anchor" href="#emptytext" aria-label="Permalink to &quot;emptyText&quot;">​</a></h2><ul><li><p><strong>详情：</strong> 空数据时显示的文本内容</p></li><li><p><strong>默认值：</strong></p></li><li><p><strong>类型：</strong></p></li></ul><h2 id="defaultexpandall" tabindex="-1">defaultExpandAll <a class="header-anchor" href="#defaultexpandall" aria-label="Permalink to &quot;defaultExpandAll&quot;">​</a></h2><ul><li><p><strong>详情：</strong> 是否默认展开所有行，当Table包含展开行存在或者为树形表格时有效</p></li><li><p><strong>默认值：</strong></p></li><li><p><strong>类型：</strong></p></li></ul><h2 id="rowkeyname" tabindex="-1">rowkeyName <a class="header-anchor" href="#rowkeyname" aria-label="Permalink to &quot;rowkeyName&quot;">​</a></h2><ul><li><p><strong>详情：</strong></p></li><li><p><strong>默认值：</strong></p></li><li><p><strong>类型：</strong></p></li></ul><h2 id="border" tabindex="-1">border <a class="header-anchor" href="#border" aria-label="Permalink to &quot;border&quot;">​</a></h2><ul><li><p><strong>详情：</strong></p></li><li><p><strong>默认值：</strong></p></li><li><p><strong>类型：</strong></p></li></ul>',21)])])}const b=l(e,[["render",n]]);export{u as __pageData,b as default};
