{"version":3,"file":"twig-legacy-m5inEPd3.js","sources":["../../../node_modules/.pnpm/monaco-editor@0.52.2/node_modules/monaco-editor/esm/vs/basic-languages/twig/twig.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/twig/twig.ts\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\n  comments: {\n    blockComment: [\"{#\", \"#}\"]\n  },\n  brackets: [\n    [\"{#\", \"#}\"],\n    [\"{%\", \"%}\"],\n    [\"{{\", \"}}\"],\n    [\"(\", \")\"],\n    [\"[\", \"]\"],\n    // HTML\n    [\"<!--\", \"-->\"],\n    [\"<\", \">\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{# \", close: \" #}\" },\n    { open: \"{% \", close: \" %}\" },\n    { open: \"{{ \", close: \" }}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  surroundingPairs: [\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n    // HTML\n    { open: \"<\", close: \">\" }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \"\",\n  ignoreCase: true,\n  keywords: [\n    // (opening) tags\n    \"apply\",\n    \"autoescape\",\n    \"block\",\n    \"deprecated\",\n    \"do\",\n    \"embed\",\n    \"extends\",\n    \"flush\",\n    \"for\",\n    \"from\",\n    \"if\",\n    \"import\",\n    \"include\",\n    \"macro\",\n    \"sandbox\",\n    \"set\",\n    \"use\",\n    \"verbatim\",\n    \"with\",\n    // closing tags\n    \"endapply\",\n    \"endautoescape\",\n    \"endblock\",\n    \"endembed\",\n    \"endfor\",\n    \"endif\",\n    \"endmacro\",\n    \"endsandbox\",\n    \"endset\",\n    \"endwith\",\n    // literals\n    \"true\",\n    \"false\"\n  ],\n  tokenizer: {\n    root: [\n      // whitespace\n      [/\\s+/],\n      // Twig Tag Delimiters\n      [/{#/, \"comment.twig\", \"@commentState\"],\n      [/{%[-~]?/, \"delimiter.twig\", \"@blockState\"],\n      [/{{[-~]?/, \"delimiter.twig\", \"@variableState\"],\n      // HTML\n      [/<!DOCTYPE/, \"metatag.html\", \"@doctype\"],\n      [/<!--/, \"comment.html\", \"@comment\"],\n      [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)(\\s*)(\\/>)/, [\"delimiter.html\", \"tag.html\", \"\", \"delimiter.html\"]],\n      [/(<)(script)/, [\"delimiter.html\", { token: \"tag.html\", next: \"@script\" }]],\n      [/(<)(style)/, [\"delimiter.html\", { token: \"tag.html\", next: \"@style\" }]],\n      [/(<)((?:[\\w\\-]+:)?[\\w\\-]+)/, [\"delimiter.html\", { token: \"tag.html\", next: \"@otherTag\" }]],\n      [/(<\\/)((?:[\\w\\-]+:)?[\\w\\-]+)/, [\"delimiter.html\", { token: \"tag.html\", next: \"@otherTag\" }]],\n      [/</, \"delimiter.html\"],\n      [/[^<{]+/]\n      // text\n    ],\n    /**\n     * Comment Tag Handling\n     */\n    commentState: [\n      [/#}/, \"comment.twig\", \"@pop\"],\n      [/./, \"comment.twig\"]\n    ],\n    /**\n     * Block Tag Handling\n     */\n    blockState: [\n      [/[-~]?%}/, \"delimiter.twig\", \"@pop\"],\n      // whitespace\n      [/\\s+/],\n      // verbatim\n      // Unlike other blocks, verbatim ehas its own state\n      // transition to ensure we mark its contents as strings.\n      [\n        /(verbatim)(\\s*)([-~]?%})/,\n        [\"keyword.twig\", \"\", { token: \"delimiter.twig\", next: \"@rawDataState\" }]\n      ],\n      { include: \"expression\" }\n    ],\n    rawDataState: [\n      // endverbatim\n      [\n        /({%[-~]?)(\\s*)(endverbatim)(\\s*)([-~]?%})/,\n        [\"delimiter.twig\", \"\", \"keyword.twig\", \"\", { token: \"delimiter.twig\", next: \"@popall\" }]\n      ],\n      [/./, \"string.twig\"]\n    ],\n    /**\n     * Variable Tag Handling\n     */\n    variableState: [[/[-~]?}}/, \"delimiter.twig\", \"@pop\"], { include: \"expression\" }],\n    stringState: [\n      // closing double quoted string\n      [/\"/, \"string.twig\", \"@pop\"],\n      // interpolation start\n      [/#{\\s*/, \"string.twig\", \"@interpolationState\"],\n      // string part\n      [/[^#\"\\\\]*(?:(?:\\\\.|#(?!\\{))[^#\"\\\\]*)*/, \"string.twig\"]\n    ],\n    interpolationState: [\n      // interpolation end\n      [/}/, \"string.twig\", \"@pop\"],\n      { include: \"expression\" }\n    ],\n    /**\n     * Expression Handling\n     */\n    expression: [\n      // whitespace\n      [/\\s+/],\n      // operators - math\n      [/\\+|-|\\/{1,2}|%|\\*{1,2}/, \"operators.twig\"],\n      // operators - logic\n      [/(and|or|not|b-and|b-xor|b-or)(\\s+)/, [\"operators.twig\", \"\"]],\n      // operators - comparison (symbols)\n      [/==|!=|<|>|>=|<=/, \"operators.twig\"],\n      // operators - comparison (words)\n      [/(starts with|ends with|matches)(\\s+)/, [\"operators.twig\", \"\"]],\n      // operators - containment\n      [/(in)(\\s+)/, [\"operators.twig\", \"\"]],\n      // operators - test\n      [/(is)(\\s+)/, [\"operators.twig\", \"\"]],\n      // operators - misc\n      [/\\||~|:|\\.{1,2}|\\?{1,2}/, \"operators.twig\"],\n      // names\n      [\n        /[^\\W\\d][\\w]*/,\n        {\n          cases: {\n            \"@keywords\": \"keyword.twig\",\n            \"@default\": \"variable.twig\"\n          }\n        }\n      ],\n      // numbers\n      [/\\d+(\\.\\d+)?/, \"number.twig\"],\n      // punctuation\n      [/\\(|\\)|\\[|\\]|{|}|,/, \"delimiter.twig\"],\n      // strings\n      [/\"([^#\"\\\\]*(?:\\\\.[^#\"\\\\]*)*)\"|\\'([^\\'\\\\]*(?:\\\\.[^\\'\\\\]*)*)\\'/, \"string.twig\"],\n      // opening double quoted string\n      [/\"/, \"string.twig\", \"@stringState\"],\n      // misc syntactic constructs\n      // These are not operators per se, but for the purposes of lexical analysis we\n      // can treat them as such.\n      // arrow functions\n      [/=>/, \"operators.twig\"],\n      // assignment\n      [/=/, \"operators.twig\"]\n    ],\n    /**\n     * HTML\n     */\n    doctype: [\n      [/[^>]+/, \"metatag.content.html\"],\n      [/>/, \"metatag.html\", \"@pop\"]\n    ],\n    comment: [\n      [/-->/, \"comment.html\", \"@pop\"],\n      [/[^-]+/, \"comment.content.html\"],\n      [/./, \"comment.content.html\"]\n    ],\n    otherTag: [\n      [/\\/?>/, \"delimiter.html\", \"@pop\"],\n      [/\"([^\"]*)\"/, \"attribute.value.html\"],\n      [/'([^']*)'/, \"attribute.value.html\"],\n      [/[\\w\\-]+/, \"attribute.name.html\"],\n      [/=/, \"delimiter.html\"],\n      [/[ \\t\\r\\n]+/]\n      // whitespace\n    ],\n    // -- BEGIN <script> tags handling\n    // After <script\n    script: [\n      [/type/, \"attribute.name.html\", \"@scriptAfterType\"],\n      [/\"([^\"]*)\"/, \"attribute.value.html\"],\n      [/'([^']*)'/, \"attribute.value.html\"],\n      [/[\\w\\-]+/, \"attribute.name.html\"],\n      [/=/, \"delimiter.html\"],\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@scriptEmbedded\",\n          nextEmbedded: \"text/javascript\"\n        }\n      ],\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [\n        /(<\\/)(script\\s*)(>)/,\n        [\"delimiter.html\", \"tag.html\", { token: \"delimiter.html\", next: \"@pop\" }]\n      ]\n    ],\n    // After <script ... type\n    scriptAfterType: [\n      [/=/, \"delimiter.html\", \"@scriptAfterTypeEquals\"],\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@scriptEmbedded\",\n          nextEmbedded: \"text/javascript\"\n        }\n      ],\n      // cover invalid e.g. <script type>\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/script\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    // After <script ... type =\n    scriptAfterTypeEquals: [\n      [\n        /\"([^\"]*)\"/,\n        {\n          token: \"attribute.value.html\",\n          switchTo: \"@scriptWithCustomType.$1\"\n        }\n      ],\n      [\n        /'([^']*)'/,\n        {\n          token: \"attribute.value.html\",\n          switchTo: \"@scriptWithCustomType.$1\"\n        }\n      ],\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@scriptEmbedded\",\n          nextEmbedded: \"text/javascript\"\n        }\n      ],\n      // cover invalid e.g. <script type=>\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/script\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    // After <script ... type = $S2\n    scriptWithCustomType: [\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@scriptEmbedded.$S2\",\n          nextEmbedded: \"$S2\"\n        }\n      ],\n      [/\"([^\"]*)\"/, \"attribute.value.html\"],\n      [/'([^']*)'/, \"attribute.value.html\"],\n      [/[\\w\\-]+/, \"attribute.name.html\"],\n      [/=/, \"delimiter.html\"],\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/script\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    scriptEmbedded: [\n      [/<\\/script/, { token: \"@rematch\", next: \"@pop\", nextEmbedded: \"@pop\" }],\n      [/[^<]+/, \"\"]\n    ],\n    // -- END <script> tags handling\n    // -- BEGIN <style> tags handling\n    // After <style\n    style: [\n      [/type/, \"attribute.name.html\", \"@styleAfterType\"],\n      [/\"([^\"]*)\"/, \"attribute.value.html\"],\n      [/'([^']*)'/, \"attribute.value.html\"],\n      [/[\\w\\-]+/, \"attribute.name.html\"],\n      [/=/, \"delimiter.html\"],\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@styleEmbedded\",\n          nextEmbedded: \"text/css\"\n        }\n      ],\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [\n        /(<\\/)(style\\s*)(>)/,\n        [\"delimiter.html\", \"tag.html\", { token: \"delimiter.html\", next: \"@pop\" }]\n      ]\n    ],\n    // After <style ... type\n    styleAfterType: [\n      [/=/, \"delimiter.html\", \"@styleAfterTypeEquals\"],\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@styleEmbedded\",\n          nextEmbedded: \"text/css\"\n        }\n      ],\n      // cover invalid e.g. <style type>\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/style\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    // After <style ... type =\n    styleAfterTypeEquals: [\n      [\n        /\"([^\"]*)\"/,\n        {\n          token: \"attribute.value.html\",\n          switchTo: \"@styleWithCustomType.$1\"\n        }\n      ],\n      [\n        /'([^']*)'/,\n        {\n          token: \"attribute.value.html\",\n          switchTo: \"@styleWithCustomType.$1\"\n        }\n      ],\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@styleEmbedded\",\n          nextEmbedded: \"text/css\"\n        }\n      ],\n      // cover invalid e.g. <style type=>\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/style\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    // After <style ... type = $S2\n    styleWithCustomType: [\n      [\n        />/,\n        {\n          token: \"delimiter.html\",\n          next: \"@styleEmbedded.$S2\",\n          nextEmbedded: \"$S2\"\n        }\n      ],\n      [/\"([^\"]*)\"/, \"attribute.value.html\"],\n      [/'([^']*)'/, \"attribute.value.html\"],\n      [/[\\w\\-]+/, \"attribute.name.html\"],\n      [/=/, \"delimiter.html\"],\n      [/[ \\t\\r\\n]+/],\n      // whitespace\n      [/<\\/style\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\n    ],\n    styleEmbedded: [\n      [/<\\/style/, { token: \"@rematch\", next: \"@pop\", nextEmbedded: \"@pop\" }],\n      [/[^<]+/, \"\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":["exports","wordPattern","comments","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","defaultToken","tokenPostfix","ignoreCase","keywords","tokenizer","root","token","next","commentState","blockState","include","rawDataState","variableState","stringState","interpolationState","expression","cases","doctype","comment","otherTag","script","nextEmbedded","scriptAfterType","scriptAfterTypeEquals","switchTo","scriptWithCustomType","scriptEmbedded","style","styleAfterType","styleAfterTypeEquals","styleWithCustomType","styleEmbedded"],"mappings":"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","x_google_ignoreList":[0]}