{"version":3,"file":"apex-DyP6w7ZV.js","sources":["../../../node_modules/.pnpm/monaco-editor@0.52.2/node_modules/monaco-editor/esm/vs/basic-languages/apex/apex.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/apex/apex.ts\nvar conf = {\n  // the default separators except `@$`\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" },\n    { open: \"<\", close: \">\" }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\n      end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\n    }\n  }\n};\nvar keywords = [\n  \"abstract\",\n  \"activate\",\n  \"and\",\n  \"any\",\n  \"array\",\n  \"as\",\n  \"asc\",\n  \"assert\",\n  \"autonomous\",\n  \"begin\",\n  \"bigdecimal\",\n  \"blob\",\n  \"boolean\",\n  \"break\",\n  \"bulk\",\n  \"by\",\n  \"case\",\n  \"cast\",\n  \"catch\",\n  \"char\",\n  \"class\",\n  \"collect\",\n  \"commit\",\n  \"const\",\n  \"continue\",\n  \"convertcurrency\",\n  \"decimal\",\n  \"default\",\n  \"delete\",\n  \"desc\",\n  \"do\",\n  \"double\",\n  \"else\",\n  \"end\",\n  \"enum\",\n  \"exception\",\n  \"exit\",\n  \"export\",\n  \"extends\",\n  \"false\",\n  \"final\",\n  \"finally\",\n  \"float\",\n  \"for\",\n  \"from\",\n  \"future\",\n  \"get\",\n  \"global\",\n  \"goto\",\n  \"group\",\n  \"having\",\n  \"hint\",\n  \"if\",\n  \"implements\",\n  \"import\",\n  \"in\",\n  \"inner\",\n  \"insert\",\n  \"instanceof\",\n  \"int\",\n  \"interface\",\n  \"into\",\n  \"join\",\n  \"last_90_days\",\n  \"last_month\",\n  \"last_n_days\",\n  \"last_week\",\n  \"like\",\n  \"limit\",\n  \"list\",\n  \"long\",\n  \"loop\",\n  \"map\",\n  \"merge\",\n  \"native\",\n  \"new\",\n  \"next_90_days\",\n  \"next_month\",\n  \"next_n_days\",\n  \"next_week\",\n  \"not\",\n  \"null\",\n  \"nulls\",\n  \"number\",\n  \"object\",\n  \"of\",\n  \"on\",\n  \"or\",\n  \"outer\",\n  \"override\",\n  \"package\",\n  \"parallel\",\n  \"pragma\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"retrieve\",\n  \"return\",\n  \"returning\",\n  \"rollback\",\n  \"savepoint\",\n  \"search\",\n  \"select\",\n  \"set\",\n  \"short\",\n  \"sort\",\n  \"stat\",\n  \"static\",\n  \"strictfp\",\n  \"super\",\n  \"switch\",\n  \"synchronized\",\n  \"system\",\n  \"testmethod\",\n  \"then\",\n  \"this\",\n  \"this_month\",\n  \"this_week\",\n  \"throw\",\n  \"throws\",\n  \"today\",\n  \"tolabel\",\n  \"tomorrow\",\n  \"transaction\",\n  \"transient\",\n  \"trigger\",\n  \"true\",\n  \"try\",\n  \"type\",\n  \"undelete\",\n  \"update\",\n  \"upsert\",\n  \"using\",\n  \"virtual\",\n  \"void\",\n  \"volatile\",\n  \"webservice\",\n  \"when\",\n  \"where\",\n  \"while\",\n  \"yesterday\"\n];\nvar uppercaseFirstLetter = (lowercase) => lowercase.charAt(0).toUpperCase() + lowercase.substr(1);\nvar keywordsWithCaseVariations = [];\nkeywords.forEach((lowercase) => {\n  keywordsWithCaseVariations.push(lowercase);\n  keywordsWithCaseVariations.push(lowercase.toUpperCase());\n  keywordsWithCaseVariations.push(uppercaseFirstLetter(lowercase));\n});\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".apex\",\n  keywords: keywordsWithCaseVariations,\n  operators: [\n    \"=\",\n    \">\",\n    \"<\",\n    \"!\",\n    \"~\",\n    \"?\",\n    \":\",\n    \"==\",\n    \"<=\",\n    \">=\",\n    \"!=\",\n    \"&&\",\n    \"||\",\n    \"++\",\n    \"--\",\n    \"+\",\n    \"-\",\n    \"*\",\n    \"/\",\n    \"&\",\n    \"|\",\n    \"^\",\n    \"%\",\n    \"<<\",\n    \">>\",\n    \">>>\",\n    \"+=\",\n    \"-=\",\n    \"*=\",\n    \"/=\",\n    \"&=\",\n    \"|=\",\n    \"^=\",\n    \"%=\",\n    \"<<=\",\n    \">>=\",\n    \">>>=\"\n  ],\n  // we include these common regular expressions\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  digits: /\\d+(_+\\d+)*/,\n  octaldigits: /[0-7]+(_+[0-7]+)*/,\n  binarydigits: /[0-1]+(_+[0-1]+)*/,\n  hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n      // identifiers and keywords\n      [\n        /[a-z_$][\\w$]*/,\n        {\n          cases: {\n            \"@keywords\": { token: \"keyword.$0\" },\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      // assume that identifiers starting with an uppercase letter are types\n      [\n        /[A-Z][\\w\\$]*/,\n        {\n          cases: {\n            \"@keywords\": { token: \"keyword.$0\" },\n            \"@default\": \"type.identifier\"\n          }\n        }\n      ],\n      // whitespace\n      { include: \"@whitespace\" },\n      // delimiters and operators\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [/[<>](?!@symbols)/, \"@brackets\"],\n      [\n        /@symbols/,\n        {\n          cases: {\n            \"@operators\": \"delimiter\",\n            \"@default\": \"\"\n          }\n        }\n      ],\n      // @ annotations.\n      [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, \"annotation\"],\n      // numbers\n      [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, \"number.float\"],\n      [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, \"number.float\"],\n      [/(@digits)[fFdD]/, \"number.float\"],\n      [/(@digits)[lL]?/, \"number\"],\n      // delimiter: after number because of .\\d floats\n      [/[;,.]/, \"delimiter\"],\n      // strings\n      [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\n      // non-teminated string\n      [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"],\n      // non-teminated string\n      [/\"/, \"string\", '@string.\"'],\n      [/'/, \"string\", \"@string.'\"],\n      // characters\n      [/'[^\\\\']'/, \"string\"],\n      [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]],\n      [/'/, \"string.invalid\"]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"\"],\n      [/\\/\\*\\*(?!\\/)/, \"comment.doc\", \"@apexdoc\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/\\/\\/.*$/, \"comment\"]\n    ],\n    comment: [\n      [/[^\\/*]+/, \"comment\"],\n      // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\n      // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\n      [/\\*\\//, \"comment\", \"@pop\"],\n      [/[\\/*]/, \"comment\"]\n    ],\n    //Identical copy of comment above, except for the addition of .doc\n    apexdoc: [\n      [/[^\\/*]+/, \"comment.doc\"],\n      [/\\*\\//, \"comment.doc\", \"@pop\"],\n      [/[\\/*]/, \"comment.doc\"]\n    ],\n    string: [\n      [/[^\\\\\"']+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [\n        /[\"']/,\n        {\n          cases: {\n            \"$#==$S2\": { token: \"string\", next: \"@pop\" },\n            \"@default\": \"string\"\n          }\n        }\n      ]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":["conf","keywords","uppercaseFirstLetter","lowercase","keywordsWithCaseVariations","language"],"mappings":"AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFASG,IAACA,EAAO,CAET,YAAa,qFACb,SAAU,CACR,YAAa,KACb,aAAc,CAAC,KAAM,IAAI,CAC7B,EACE,SAAU,CACR,CAAC,IAAK,GAAG,EACT,CAAC,IAAK,GAAG,EACT,CAAC,IAAK,GAAG,CACb,EACE,iBAAkB,CAChB,CAAE,KAAM,IAAK,MAAO,GAAG,EACvB,CAAE,KAAM,IAAK,MAAO,GAAG,EACvB,CAAE,KAAM,IAAK,MAAO,GAAG,EACvB,CAAE,KAAM,IAAK,MAAO,GAAG,EACvB,CAAE,KAAM,IAAK,MAAO,GAAG,CAC3B,EACE,iBAAkB,CAChB,CAAE,KAAM,IAAK,MAAO,GAAG,EACvB,CAAE,KAAM,IAAK,MAAO,GAAG,EACvB,CAAE,KAAM,IAAK,MAAO,GAAG,EACvB,CAAE,KAAM,IAAK,MAAO,GAAG,EACvB,CAAE,KAAM,IAAK,MAAO,GAAG,EACvB,CAAE,KAAM,IAAK,MAAO,GAAG,CAC3B,EACE,QAAS,CACP,QAAS,CACP,MAAO,IAAI,OAAO,oDAAoD,EACtE,IAAK,IAAI,OAAO,sDAAsD,CAC5E,CACA,CACA,EACIC,EAAW,CACb,WACA,WACA,MACA,MACA,QACA,KACA,MACA,SACA,aACA,QACA,aACA,OACA,UACA,QACA,OACA,KACA,OACA,OACA,QACA,OACA,QACA,UACA,SACA,QACA,WACA,kBACA,UACA,UACA,SACA,OACA,KACA,SACA,OACA,MACA,OACA,YACA,OACA,SACA,UACA,QACA,QACA,UACA,QACA,MACA,OACA,SACA,MACA,SACA,OACA,QACA,SACA,OACA,KACA,aACA,SACA,KACA,QACA,SACA,aACA,MACA,YACA,OACA,OACA,eACA,aACA,cACA,YACA,OACA,QACA,OACA,OACA,OACA,MACA,QACA,SACA,MACA,eACA,aACA,cACA,YACA,MACA,OACA,QACA,SACA,SACA,KACA,KACA,KACA,QACA,WACA,UACA,WACA,SACA,UACA,YACA,SACA,WACA,SACA,YACA,WACA,YACA,SACA,SACA,MACA,QACA,OACA,OACA,SACA,WACA,QACA,SACA,eACA,SACA,aACA,OACA,OACA,aACA,YACA,QACA,SACA,QACA,UACA,WACA,cACA,YACA,UACA,OACA,MACA,OACA,WACA,SACA,SACA,QACA,UACA,OACA,WACA,aACA,OACA,QACA,QACA,WACF,EACIC,EAAwBC,GAAcA,EAAU,OAAO,CAAC,EAAE,cAAgBA,EAAU,OAAO,CAAC,EAC5FC,EAA6B,CAAA,EACjCH,EAAS,QAASE,GAAc,CAC9BC,EAA2B,KAAKD,CAAS,EACzCC,EAA2B,KAAKD,EAAU,aAAa,EACvDC,EAA2B,KAAKF,EAAqBC,CAAS,CAAC,CACjE,CAAC,EACE,IAACE,EAAW,CACb,aAAc,GACd,aAAc,QACd,SAAUD,EACV,UAAW,CACT,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,MACJ,EAEE,QAAS,wBACT,QAAS,wEACT,OAAQ,cACR,YAAa,oBACb,aAAc,oBACd,UAAW,iCAEX,UAAW,CACT,KAAM,CAEJ,CACE,gBACA,CACE,MAAO,CACL,YAAa,CAAE,MAAO,YAAY,EAClC,WAAY,YACxB,CACA,CACA,EAEM,CACE,eACA,CACE,MAAO,CACL,YAAa,CAAE,MAAO,YAAY,EAClC,WAAY,iBACxB,CACA,CACA,EAEM,CAAE,QAAS,aAAa,EAExB,CAAC,aAAc,WAAW,EAC1B,CAAC,mBAAoB,WAAW,EAChC,CACE,WACA,CACE,MAAO,CACL,aAAc,YACd,WAAY,EACxB,CACA,CACA,EAEM,CAAC,yBAA0B,YAAY,EAEvC,CAAC,yCAA0C,cAAc,EACzD,CAAC,oDAAqD,cAAc,EACpE,CAAC,kBAAmB,cAAc,EAClC,CAAC,iBAAkB,QAAQ,EAE3B,CAAC,QAAS,WAAW,EAErB,CAAC,kBAAmB,gBAAgB,EAEpC,CAAC,kBAAmB,gBAAgB,EAEpC,CAAC,IAAK,SAAU,WAAW,EAC3B,CAAC,IAAK,SAAU,WAAW,EAE3B,CAAC,WAAY,QAAQ,EACrB,CAAC,mBAAoB,CAAC,SAAU,gBAAiB,QAAQ,CAAC,EAC1D,CAAC,IAAK,gBAAgB,CAC5B,EACI,WAAY,CACV,CAAC,aAAc,EAAE,EACjB,CAAC,eAAgB,cAAe,UAAU,EAC1C,CAAC,OAAQ,UAAW,UAAU,EAC9B,CAAC,UAAW,SAAS,CAC3B,EACI,QAAS,CACP,CAAC,UAAW,SAAS,EAGrB,CAAC,OAAQ,UAAW,MAAM,EAC1B,CAAC,QAAS,SAAS,CACzB,EAEI,QAAS,CACP,CAAC,UAAW,aAAa,EACzB,CAAC,OAAQ,cAAe,MAAM,EAC9B,CAAC,QAAS,aAAa,CAC7B,EACI,OAAQ,CACN,CAAC,WAAY,QAAQ,EACrB,CAAC,WAAY,eAAe,EAC5B,CAAC,MAAO,uBAAuB,EAC/B,CACE,OACA,CACE,MAAO,CACL,UAAW,CAAE,MAAO,SAAU,KAAM,MAAM,EAC1C,WAAY,QACxB,CACA,CACA,CACA,CACA,CACA","x_google_ignoreList":[0]}