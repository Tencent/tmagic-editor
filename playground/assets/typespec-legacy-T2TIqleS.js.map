{"version":3,"file":"typespec-legacy-T2TIqleS.js","sources":["../../../node_modules/.pnpm/monaco-editor@0.52.2/node_modules/monaco-editor/esm/vs/basic-languages/typespec/typespec.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/typespec/typespec.ts\nvar bounded = (text) => `\\\\b${text}\\\\b`;\nvar notBefore = (regex) => `(?!${regex})`;\nvar identifierStart = \"[_a-zA-Z]\";\nvar identifierContinue = \"[_a-zA-Z0-9]\";\nvar identifier = bounded(`${identifierStart}${identifierContinue}*`);\nvar directive = bounded(`[_a-zA-Z-0-9]+`);\nvar keywords = [\n  \"import\",\n  \"model\",\n  \"scalar\",\n  \"namespace\",\n  \"op\",\n  \"interface\",\n  \"union\",\n  \"using\",\n  \"is\",\n  \"extends\",\n  \"enum\",\n  \"alias\",\n  \"return\",\n  \"void\",\n  \"if\",\n  \"else\",\n  \"projection\",\n  \"dec\",\n  \"extern\",\n  \"fn\"\n];\nvar namedLiterals = [\"true\", \"false\", \"null\", \"unknown\", \"never\"];\nvar nonCommentWs = `[ \\\\t\\\\r\\\\n]`;\nvar numericLiteral = `[0-9]+`;\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"/**\", close: \" */\", notIn: [\"string\"] }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' }\n  ],\n  indentationRules: {\n    decreaseIndentPattern: new RegExp(\"^((?!.*?/\\\\*).*\\\\*/)?\\\\s*[\\\\}\\\\]].*$\"),\n    increaseIndentPattern: new RegExp(\n      \"^((?!//).)*(\\\\{([^}\\\"'`/]*|(\\\\t|[ ])*//.*)|\\\\([^)\\\"'`/]*|\\\\[[^\\\\]\\\"'`/]*)$\"\n    ),\n    // e.g.  * ...| or */| or *-----*/|\n    unIndentedLinePattern: new RegExp(\n      \"^(\\\\t|[ ])*[ ]\\\\*[^/]*\\\\*/\\\\s*$|^(\\\\t|[ ])*[ ]\\\\*/\\\\s*$|^(\\\\t|[ ])*[ ]\\\\*([ ]([^\\\\*]|\\\\*(?!/))*)?$\"\n    )\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".tsp\",\n  brackets: [\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }\n  ],\n  symbols: /[=:;<>]+/,\n  keywords,\n  namedLiterals,\n  escapes: `\\\\\\\\(u{[0-9A-Fa-f]+}|n|r|t|\\\\\\\\|\"|\\\\\\${)`,\n  tokenizer: {\n    root: [{ include: \"@expression\" }, { include: \"@whitespace\" }],\n    stringVerbatim: [\n      { regex: `(|\"|\"\")[^\"]`, action: { token: \"string\" } },\n      { regex: `\"\"\"${notBefore(`\"`)}`, action: { token: \"string\", next: \"@pop\" } }\n    ],\n    stringLiteral: [\n      { regex: `\\\\\\${`, action: { token: \"delimiter.bracket\", next: \"@bracketCounting\" } },\n      { regex: `[^\\\\\\\\\"$]+`, action: { token: \"string\" } },\n      { regex: \"@escapes\", action: { token: \"string.escape\" } },\n      { regex: `\\\\\\\\.`, action: { token: \"string.escape.invalid\" } },\n      { regex: `\"`, action: { token: \"string\", next: \"@pop\" } }\n    ],\n    bracketCounting: [\n      { regex: `{`, action: { token: \"delimiter.bracket\", next: \"@bracketCounting\" } },\n      { regex: `}`, action: { token: \"delimiter.bracket\", next: \"@pop\" } },\n      { include: \"@expression\" }\n    ],\n    comment: [\n      { regex: `[^\\\\*]+`, action: { token: \"comment\" } },\n      { regex: `\\\\*\\\\/`, action: { token: \"comment\", next: \"@pop\" } },\n      { regex: `[\\\\/*]`, action: { token: \"comment\" } }\n    ],\n    whitespace: [\n      { regex: nonCommentWs },\n      { regex: `\\\\/\\\\*`, action: { token: \"comment\", next: \"@comment\" } },\n      { regex: `\\\\/\\\\/.*$`, action: { token: \"comment\" } }\n    ],\n    expression: [\n      { regex: `\"\"\"`, action: { token: \"string\", next: \"@stringVerbatim\" } },\n      { regex: `\"${notBefore(`\"\"`)}`, action: { token: \"string\", next: \"@stringLiteral\" } },\n      { regex: numericLiteral, action: { token: \"number\" } },\n      {\n        regex: identifier,\n        action: {\n          cases: {\n            \"@keywords\": { token: \"keyword\" },\n            \"@namedLiterals\": { token: \"keyword\" },\n            \"@default\": { token: \"identifier\" }\n          }\n        }\n      },\n      { regex: `@${identifier}`, action: { token: \"tag\" } },\n      { regex: `#${directive}`, action: { token: \"directive\" } }\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":["bounded","text","notBefore","regex","identifier","directive","exports","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","indentationRules","decreaseIndentPattern","RegExp","increaseIndentPattern","unIndentedLinePattern","defaultToken","tokenPostfix","token","symbols","keywords","namedLiterals","escapes","tokenizer","root","include","stringVerbatim","action","next","stringLiteral","bracketCounting","comment","whitespace","expression","cases"],"mappings":"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","x_google_ignoreList":[0]}