{"version":3,"file":"cameligo-BFG1Mk7z.js","sources":["../../../node_modules/.pnpm/monaco-editor@0.52.2/node_modules/monaco-editor/esm/vs/basic-languages/cameligo/cameligo.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.52.2(404545bded1df6ffa41ea0af4e8ddb219018c6c1)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n\n// src/basic-languages/cameligo/cameligo.ts\nvar conf = {\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"(*\", \"*)\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"],\n    [\"<\", \">\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: \"<\", close: \">\" },\n    { open: \"'\", close: \"'\" },\n    { open: '\"', close: '\"' },\n    { open: \"(*\", close: \"*)\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: \"<\", close: \">\" },\n    { open: \"'\", close: \"'\" },\n    { open: '\"', close: '\"' },\n    { open: \"(*\", close: \"*)\" }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".cameligo\",\n  ignoreCase: true,\n  brackets: [\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\n    { open: \"<\", close: \">\", token: \"delimiter.angle\" }\n  ],\n  keywords: [\n    \"abs\",\n    \"assert\",\n    \"block\",\n    \"Bytes\",\n    \"case\",\n    \"Crypto\",\n    \"Current\",\n    \"else\",\n    \"failwith\",\n    \"false\",\n    \"for\",\n    \"fun\",\n    \"if\",\n    \"in\",\n    \"let\",\n    \"let%entry\",\n    \"let%init\",\n    \"List\",\n    \"list\",\n    \"Map\",\n    \"map\",\n    \"match\",\n    \"match%nat\",\n    \"mod\",\n    \"not\",\n    \"operation\",\n    \"Operation\",\n    \"of\",\n    \"record\",\n    \"Set\",\n    \"set\",\n    \"sender\",\n    \"skip\",\n    \"source\",\n    \"String\",\n    \"then\",\n    \"to\",\n    \"true\",\n    \"type\",\n    \"with\"\n  ],\n  typeKeywords: [\"int\", \"unit\", \"string\", \"tz\", \"nat\", \"bool\"],\n  operators: [\n    \"=\",\n    \">\",\n    \"<\",\n    \"<=\",\n    \">=\",\n    \"<>\",\n    \":\",\n    \":=\",\n    \"and\",\n    \"mod\",\n    \"or\",\n    \"+\",\n    \"-\",\n    \"*\",\n    \"/\",\n    \"@\",\n    \"&\",\n    \"^\",\n    \"%\",\n    \"->\",\n    \"<-\",\n    \"&&\",\n    \"||\"\n  ],\n  // we include these common regular expressions\n  symbols: /[=><:@\\^&|+\\-*\\/\\^%]+/,\n  // The main tokenizer for our languages\n  tokenizer: {\n    root: [\n      // identifiers and keywords\n      [\n        /[a-zA-Z_][\\w]*/,\n        {\n          cases: {\n            \"@keywords\": { token: \"keyword.$0\" },\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      // whitespace\n      { include: \"@whitespace\" },\n      // delimiters and operators\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [/[<>](?!@symbols)/, \"@brackets\"],\n      [\n        /@symbols/,\n        {\n          cases: {\n            \"@operators\": \"delimiter\",\n            \"@default\": \"\"\n          }\n        }\n      ],\n      // numbers\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"],\n      [/\\$[0-9a-fA-F]{1,16}/, \"number.hex\"],\n      [/\\d+/, \"number\"],\n      // delimiter: after number because of .\\d floats\n      [/[;,.]/, \"delimiter\"],\n      // strings\n      [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"],\n      // non-teminated string\n      [/'/, \"string\", \"@string\"],\n      // characters\n      [/'[^\\\\']'/, \"string\"],\n      [/'/, \"string.invalid\"],\n      [/\\#\\d+/, \"string\"]\n    ],\n    /* */\n    comment: [\n      [/[^\\(\\*]+/, \"comment\"],\n      //[/\\(\\*/,    'comment', '@push' ],    // nested comment  not allowed :-(\n      [/\\*\\)/, \"comment\", \"@pop\"],\n      [/\\(\\*/, \"comment\"]\n    ],\n    string: [\n      [/[^\\\\']+/, \"string\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/'/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"white\"],\n      [/\\(\\*/, \"comment\", \"@comment\"],\n      [/\\/\\/.*$/, \"comment\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":["conf","language"],"mappings":"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","x_google_ignoreList":[0]}