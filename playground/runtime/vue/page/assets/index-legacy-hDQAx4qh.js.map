{"version":3,"file":"index-legacy-hDQAx4qh.js","sources":["../../../../../node_modules/.pnpm/@tmagic+vue-overlay@0.2.0_@tmagic+core@1.6.0_typescript@5.9.2__@tmagic+vue-runtime-help_d2323dafed08b37027dcaa710bbfcfd2/node_modules/@tmagic/vue-overlay/src/index.vue"],"sourcesContent":["<template>\n  <component v-if=\"visible\" :is=\"containerComponent\" :config=\"{ items: config.items, [IS_DSL_NODE_KEY]: false }\">\n    <slot></slot>\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, inject, onBeforeUnmount, type PropType, ref } from 'vue-demi';\n\nimport type TMagicApp from '@tmagic/core';\nimport { type Id, IS_DSL_NODE_KEY, type MContainer, type MNode, type MPage } from '@tmagic/core';\nimport { registerNodeHooks, useComponent, useNode } from '@tmagic/vue-runtime-help';\n\ninterface OverlaySchema extends Omit<MContainer, 'id'> {\n  id?: Id;\n  type?: 'overlay';\n}\n\nexport default defineComponent({\n  name: 'tmagic-overlay',\n\n  props: {\n    config: {\n      type: Object as PropType<OverlaySchema>,\n      required: true,\n    },\n    iteratorIndex: Array as PropType<number[]>,\n    iteratorContainerId: Array as PropType<Id[]>,\n    containerIndex: Number,\n    pageFragmentContainerId: [String, Number] as PropType<Id>,\n    model: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n\n  setup(props) {\n    const visible = ref(false);\n\n    const app = inject<TMagicApp>('app');\n    const containerComponent = useComponent({ componentType: 'container', app });\n\n    const openOverlay = () => {\n      visible.value = true;\n      app?.emit('overlay:open', node);\n    };\n\n    const closeOverlay = () => {\n      visible.value = false;\n      app?.emit('overlay:close', node);\n    };\n\n    const editorSelectHandler = (\n      info: {\n        node: MNode;\n        page: MPage;\n        parent: MContainer;\n      },\n      path: MNode[],\n    ) => {\n      if (path.find((node: MNode) => node.id === props.config.id)) {\n        openOverlay();\n      } else {\n        closeOverlay();\n      }\n    };\n\n    app?.page?.on('editor:select', editorSelectHandler);\n\n    onBeforeUnmount(() => {\n      app?.page?.off('editor:select', editorSelectHandler);\n    });\n\n    const node = useNode(props, app);\n    registerNodeHooks(node, {\n      openOverlay,\n      closeOverlay,\n    });\n\n    return {\n      containerComponent,\n      visible,\n      IS_DSL_NODE_KEY,\n    };\n  },\n});\n</script>\n"],"names":["_sfc_main","defineComponent","name","props","config","type","Object","required","iteratorIndex","Array","iteratorContainerId","containerIndex","Number","pageFragmentContainerId","String","model","default","setup","visible","ref","app","inject","containerComponent","useComponent","componentType","openOverlay","value","emit","node","closeOverlay","editorSelectHandler","info","path","find","id","page","on","onBeforeUnmount","off","useNode","registerNodeHooks","IS_DSL_NODE_KEY","_ctx","_openBlock","_createBlock","_resolveDynamicComponent","key","items","_renderSlot","$slots"],"mappings":"mSAkBA,MAAAA,EAAeC,EAAgB,CAC7BC,KAAM,iBAENC,MAAO,CACLC,OAAQ,CACNC,KAAMC,OACNC,UAAU,GAEZC,cAAeC,MACfC,oBAAqBD,MACrBE,eAAgBC,OAChBC,wBAAyB,CAACC,OAAQF,QAClCG,MAAO,CACLV,KAAMC,OACNU,QAASA,MAAQ,KAIrBC,KAAAA,CAAMd,GACJ,MAAMe,EAAUC,GAAI,GAEdC,EAAMC,EAAkB,OACxBC,EAAqBC,EAAa,CAAEC,cAAe,YAAaJ,QAEhEK,EAAcA,KAClBP,EAAQQ,OAAQ,EAChBN,GAAKO,KAAK,eAAgBC,IAGtBC,EAAeA,KACnBX,EAAQQ,OAAQ,EAChBN,GAAKO,KAAK,gBAAiBC,IAGvBE,EAAsBA,CAC1BC,EAKAC,KAEIA,EAAKC,KAAML,GAAgBA,EAAKM,KAAO/B,EAAMC,OAAO8B,IACtDT,IAEAI,KAIJT,GAAKe,MAAMC,GAAG,gBAAiBN,GAE/BO,EAAgB,KACdjB,GAAKe,MAAMG,IAAI,gBAAiBR,KAGlC,MAAMF,EAAOW,EAAQpC,EAAOiB,GAM5B,OALAoB,EAAkBZ,EAAM,CACtBH,cACAI,iBAGK,CACLP,qBACAJ,UACAuB,kBACF,4DAlFeC,EAAAxB,SAAAyB,IAAjBC,EAEYC,EAFmBH,EAAApB,oBAAkB,CAAAwB,IAAA,EAAG1C,OAAM,CAAA2C,MAAWL,EAAAtC,OAAO2C,MAAK,CAAGL,EAAAD,kBAAe,IAAA,WACjG,IAAa,CAAbO,EAAaN,EAAAO,OAAA","x_google_ignoreList":[0]}